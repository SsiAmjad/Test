FUNCTION "Proc_InfoComm" : String[254]
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      NumPoste : UInt;
      IdComLign : ULInt;
   END_VAR

   VAR_OUTPUT 
      Msg_Def : String;
   END_VAR

   VAR_IN_OUT 
      ComLign : "S_ComLign";
   END_VAR

   VAR_TEMP 
      parameters_value : Array[0..20] of String;
      Resultat_Decode : WString;
      ErreurMessage : String;
      status : Int;
      Rep_temp : String;
      POSITION_CLE : Int;
      i : USInt;
   END_VAR


BEGIN
	//Insertion des parametres 
	#parameters_value[0] := UINT_TO_STRING(#NumPoste);
	#parameters_value[1] := ULINT_TO_STRING(#IdComLign);
	
	
	
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	
	#Resultat_Decode := "COMBASE"(procedure_name := '"EXP".sp_exp_infoComm',
	                              values_of_record := #parameters_value,
	                              parameters_number := 2,
	                              ERROR_MESSAGE => #ErreurMessage);
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	"ResultProc".test := #Resultat_Decode;
	#status := "FCT_DECODE_TRAME"(KEYWORD := 'REPONSE:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Proc_InfoComm);
	
	IF #Proc_InfoComm = 'NOK' THEN
	    #status := "FCT_DECODE_TRAME"(KEYWORD := 'MESS:',
	                                  BUFFER := #Resultat_Decode,
	                                  Retour_VAL => #Msg_Def);
	    RETURN;
	END_IF;
	//++++++++++++++++++++++++++++++++++++
	"ResultProc".test := #Resultat_Decode;
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|IDLIGORIG:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#ComLign._IdLigOrig := STRING_TO_ULINT(#Rep_temp); ;
	
	
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|ZONE:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #ComLign._PtcelOrig._Cel);
	IF "RechIndexCel"(#ComLign._PtcelOrig._Cel)>-1 AND "RechIndexCel"(#ComLign._PtcelOrig._Cel)<="NB_CEL_MAX" THEN
	    #ComLign._PtcelOrig := "DB_Mod_Cellule"._TabCel["RechIndexCel"(#ComLign._PtcelOrig._Cel)];
	END_IF;
	
	
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|CHUTE:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#ComLign._ChuteCel := STRING_TO_REAL(#Rep_temp);
	
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|PV:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#ComLign._VitPV := STRING_TO_USINT(#Rep_temp);
	
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|GV:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#ComLign._VitGV := STRING_TO_USINT(#Rep_temp);
	
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|PGP:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#ComLign._SeuilPV := STRING_TO_USINT(#Rep_temp);
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|DEB:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#ComLign._DebitCel := STRING_TO_REAL(#Rep_temp);
	
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|VIDE:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#ComLign._FgaVider := (#Rep_temp <> 'f');
	//================ Decode des informations generales ================//
	#POSITION_CLE := FIND(IN1 := #Resultat_Decode, IN2 := STRING_TO_WSTRING('\n'));
	IF #POSITION_CLE > 0 THEN
	#Resultat_Decode := DELETE(IN := #Resultat_Decode, L := LEN('\n') + #POSITION_CLE - 1, P := 1);
	END_IF;
	//================ Decode des Commandes================//
	WHILE LEN(#Resultat_Decode) > 0 DO
	    #status := "FCT_DECODE_TRAME"(KEYWORD := 'CASE:',
	                                  BUFFER := #Resultat_Decode,
	                                  Retour_VAL => #Rep_temp);// ;
	    #ComLign._Cases[#i]._Nocase := STRING_TO_USINT(#Rep_temp);
	    #status := "FCT_DECODE_TRAME"(KEYWORD := '|QTE:',
	                                  BUFFER := #Resultat_Decode,
	                                  Retour_VAL => #Rep_temp);
	    #ComLign._Cases[#i]._ConsQte := STRING_TO_REAL(#Rep_temp);
	    
	    "ResultProc".Resultat_Decode := #Resultat_Decode;
	    #POSITION_CLE := FIND(IN1 := #Resultat_Decode, IN2 := STRING_TO_WSTRING('\n'));
	    IF #POSITION_CLE > 0 THEN
	        #Resultat_Decode := DELETE(IN := #Resultat_Decode, L := LEN('\n') + #POSITION_CLE - 1, P := 1);
	        #i := #i + 1;
	    ELSE
	        EXIT;
	    END_IF;
	END_WHILE;
	
	
	
	
	
	
	
END_FUNCTION

