FUNCTION "Gest_Lanc_Exp" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      Fg_Base : Bool;
      RAZ_Pt_Zs : "S_Suivi_Dosage";
   END_VAR

   VAR_IN_OUT 
      Lanc_Exp : "S_Lanc_Exp";
   END_VAR

   VAR_TEMP 
      Ret_Test_Lot_Att_Tache : SInt;
      Ret_Maj_Niv : SInt;
      Niv_Cir_Exp : USInt;
      Ret_Maj_Activ : SInt;
      Msg_Def : String;
      Ret_RD_SYS_T : Int;
      Tps_Act : Date_And_Time;
      i : SInt;
   END_VAR

   VAR CONSTANT 
      Etp_Repos : SInt := 0;
      Etp_Att_Amont : SInt := 1;
      Etp_Controles : SInt := 2;
      Etp_Lanc_Exp : SInt := 3;
      Etp_Circuit_Enc : SInt := 4;
      Etp_Att_Fin_Prd_Sous_Mel : SInt := 5;
      Etp_Test_Ench : SInt := 6;
      Etp_Test_Ench_Fin_Mel_Lot_Suiv : SInt := 7;
      Etp_Fin_Lot : SInt := 8;
      Etp_Att_Acq : SInt := 9;
   END_VAR


BEGIN
	//============= Affichage Etiquette =============//
	"FC_Affich_Etiquette"(Couleur:= #Lanc_Exp.CommunDos._Supervision.Couleur,
	                      Cel_Dest:= #Lanc_Exp.CommunDos._Supervision.Affichage._Destination,
	                      CdMat:= #Lanc_Exp.CommunDos._Supervision.Affichage._Matiere,
	                      NoLot:= #Lanc_Exp.CommunDos._Supervision.Affichage._NumLot,
	                      QteLot:= #Lanc_Exp.CommunDos._Supervision.Affichage._QteTheorique,
	                      Desc_Etp:= #Lanc_Exp.CommunDos._Supervision.Affichage._Desc_Etp,
	                      Etiquette := #Lanc_Exp.CommunDos);
	//============= Affichage Etiquette =============//
	#Ret_RD_SYS_T := RD_SYS_T(#Tps_Act);
	CASE #Lanc_Exp.CommunDos.Module_Commun._Etp OF
	    #Etp_Repos:
	        REGION Preliminaire Repos
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                #Lanc_Exp.Pt_Zs := #RAZ_Pt_Zs;
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Repos
	        REGION Cyclique Repos
	            #Ret_Test_Lot_Att_Tache := "Test_Lot_Att_Tache"(Num_Tache := #Lanc_Exp.CommunDos.Module_Commun._Tache, Num_Zone => #Lanc_Exp.CommunDos.Module_Commun._NumZone);
	            IF #Ret_Test_Lot_Att_Tache = 1 THEN
	                #Lanc_Exp.Pt_Zs :="DB_Data_Dosage"."THIS"[#Lanc_Exp.CommunDos.Module_Commun._NumZone];
	                #Lanc_Exp.Pt_Zs._Fg_Enchain := FALSE;
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Lanc_Exp.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_CIR_EXP_DEBUT_LOT");
	                #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Att_Amont;
	            END_IF;
	        END_REGION Cyclique Repos
	    #Etp_Att_Amont:
	        REGION Preliminaire Att Amont
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Amont
	        REGION Cyclique Att Amont
	            // Attente fin deroutage des lots eventuels
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone, Lst_Taches := #Lanc_Exp.Lst_Taches_Att_Chg_Exp) THEN
	                RETURN;
	            END_IF;
	            #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Controles;
	        END_REGION Cyclique Att Amont
	    #Etp_Controles:
	        REGION Preliminaire Controles
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                //=== Traitement cas retour de defaut ===//
	                IF #Lanc_Exp.Dial_Def.Reponse_Def <> '' THEN
	                    #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	                    CASE #Lanc_Exp.Dial_Def.Num_Def_Etape OF
	                        1:
	                            GOTO Controles_DEF1;
	                    END_CASE;
	                END_IF;
	                //=== Traitement cas retour de defaut ===//
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Controles
	        REGION Cyclique Controles
	            IF (#Lanc_Exp.Pt_Zs._Fg_Hop AND #Lanc_Exp.Fg_Ctrl_Hop) OR NOT (#Lanc_Exp.Pt_Zs._Fg_Hop)THEN
	                IF (#Lanc_Exp.Pt_Zs._Fg_Hop AND #Lanc_Exp.Fg_Ctrl_Hop)THEN
	                    //Communication avec la base
	                    ;
	                ELSE
	                    //Communication avec la base
	                    ;
	                END_IF;
	                #Lanc_Exp.Pt_Zs._NH := #Lanc_Exp.Pt_Cel._NivHaut;
	            END_IF;
	            // Test Si changement de cellule
	            IF #Lanc_Exp.Pt_Zs._Cel_Dest <> #Lanc_Exp.Pt_Zs._Cel_Desti THEN
	                #Lanc_Exp.Pt_Zs._Cel_Desti := #Lanc_Exp.Pt_Zs._Cel_Dest;
	                // Communication avec la base
	                IF #Lanc_Exp.Fg_Chg_Dest_Serie_Dem_Cir THEN
	                    IF "FC_Lot_Id"(Pt_Zs_Enc:=#Lanc_Exp.Pt_Zs, Num_Zone_Enc:=#Lanc_Exp.CommunDos.Module_Commun._NumZone) THEN
	                        #Lanc_Exp.Dial_Def.Num_Def_Etape := 1;
	                        #Msg_Def := 'Confirmez vous le changement de la destination pour tous les lots ?';
	                        #Lanc_Exp.Dial_Def.Index_Defaut := "Dialog_Defaut"(Fg_Base:=#Fg_Base, Msg_Defaut := #Msg_Def,
	                                                                         Type_Defaut := 0,
	                                                                         Automatisme := #Lanc_Exp.Pt_Zs._SuiviCommun._CdProc,
	                                                                         Num_Lot := #Lanc_Exp.Pt_Zs._SuiviCommun._NoLot,
	                                                                         Origine_Defaut := '',
	                                                                         Libelle_Origine := #Lanc_Exp.CommunDos.Module_Commun._NomTache,
	                                                                         Acq1 := 'Oui',
	                                                                         Acq2 := 'Non',
	                                                                         Acq3 := '',
	                                                                         Acq4 := '',
	                                                                         Acq5 := '',
	                                                                         Acq6 := '',
	                                                                         Acq7 := '',
	                                                                         Acq8 := '',
	                                                                         Acq_Choisi := -1,
	                                                                         Date_Arrivee := #Tps_Act);
	                      #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Att_Acq;
	                      RETURN;
	                    END_IF;
	                END_IF;
	            END_IF;
	        Controles_DEF1:
	            //========================== Traitement des reponses defaut ==========================//
	            IF (#Lanc_Exp.Dial_Def.Reponse_Def = 'Oui') THEN
	                "MAJ_Chg_Cell_Serie"(Pt_Zs_Enc:=#Lanc_Exp.Pt_Zs, Num_Zone_Enc:=#Lanc_Exp.CommunDos.Module_Commun._NumZone);
	                // RAZ message defaut
	                #Lanc_Exp.Dial_Def.Reponse_Def := '';
	                RETURN;
	            END_IF;
	            IF (#Lanc_Exp.Dial_Def.Reponse_Def = 'Non') THEN
	                // RAZ message defaut
	                #Lanc_Exp.Dial_Def.Reponse_Def := '';
	                RETURN;
	            END_IF;
	            //========================== Traitement des reponses defaut ==========================//
	            FOR #i := 0 TO #Lanc_Exp.Pt_Zs._SuiviCommun._Exam.NbExam DO
	                IF #Lanc_Exp.Pt_Zs._SuiviCommun._Exam.Examen[#i].Moment = 'D' THEN
	                    ;
	                END_IF;
	            END_FOR;
	            #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Lanc_Exp;
	        END_REGION Cyclique Controles
	    #Etp_Lanc_Exp:
	        REGION Preliminaire Lanc Exp
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Lanc Exp
	        REGION Cyclique Lanc Exp
	            IF NOT #Lanc_Exp.Fg_Valid_Deux_Cir THEN
	                #Ret_Maj_Activ := "Maj_Activ"(Num_Zone:= #Lanc_Exp.CommunDos.Module_Commun._NumZone, Num_Tache:= #Lanc_Exp.Tac_Exp_Dos1);
	                #Lanc_Exp.Fg_Ench_Exp := FALSE;
	            ELSE
	                IF NOT #Lanc_Exp.Fg_Ench_Exp THEN
	                    IF NOT #Lanc_Exp.Exp1.Fg_Cir_Enc THEN
	                        IF #Lanc_Exp.Exp2.Fg_Cir_Enc THEN
	                            IF "Test_Niv"(Num_Zone := #Lanc_Exp.Exp2.CommunDos.Module_Commun._NumZone, Num_Tache := #Lanc_Exp.Tac_Exp_Dos2, Niveau := "NIV_CIR_EXP_VIDANGE", Niveau_Tache => #Niv_Cir_Exp) < 0 THEN
	                                RETURN;
	                            END_IF;
	                            #Lanc_Exp.Memo_Circuit := 1;
	                            #Ret_Maj_Activ := "Maj_Activ"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone, Num_Tache := #Lanc_Exp.Tac_Exp_Dos1);
	                        END_IF;
	                    ELSE
	                        IF #Lanc_Exp.Exp1.Fg_Cir_Enc THEN
	                            IF "Test_Niv"(Num_Zone := #Lanc_Exp.Exp2.CommunDos.Module_Commun._NumZone, Num_Tache := #Lanc_Exp.Tac_Exp_Dos1, Niveau := "NIV_CIR_EXP_VIDANGE", Niveau_Tache => #Niv_Cir_Exp) < 0 THEN
	                                RETURN;
	                            END_IF;
	                            
	                        END_IF;
	                        #Ret_Maj_Activ := "Maj_Activ"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone, Num_Tache := #Lanc_Exp.Tac_Exp_Dos2);
	                        #Lanc_Exp.Memo_Circuit := 2;
	                    END_IF;
	                ELSE
	                    IF #Lanc_Exp.Memo_Circuit =0 OR #Lanc_Exp.Memo_Circuit = 1 THEN
	                        #Ret_Maj_Activ := "Maj_Activ"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone, Num_Tache := #Lanc_Exp.Tac_Exp_Dos1);
	                    ELSE
	                        #Ret_Maj_Activ := "Maj_Activ"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone, Num_Tache := #Lanc_Exp.Tac_Exp_Dos2);
	                    END_IF;
	                END_IF;
	                #Lanc_Exp.Fg_Ench_Exp := FALSE;
	            END_IF;
	            #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Circuit_Enc;
	            RETURN;
	        END_REGION Cyclique Lanc Exp
	    #Etp_Circuit_Enc:
	        REGION Preliminaire Circuit Enc
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Lanc_Exp.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_CIR_EXP_LANCE");
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Circuit Enc
	        REGION Cyclique Circuit Enc
	            IF "Test_Niv"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone, Num_Tache := #Lanc_Exp.Tac_Exp_Dos1, Niveau := "NIV_CIR_EXP_PRET", Niveau_Tache => #Niv_Cir_Exp) < 0 THEN
	                RETURN;
	            END_IF;
	            IF #Lanc_Exp.Fg_Valid_Deux_Cir THEN
	                IF "Test_Niv"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone,Num_Tache := #Lanc_Exp.Tac_Exp_Dos2,Niveau := "NIV_CIR_EXP_PRET",Niveau_Tache=>#Niv_Cir_Exp) < 0 THEN
	                    RETURN;
	                END_IF;
	            END_IF;
	            #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Att_Fin_Prd_Sous_Mel;
	            RETURN;
	        END_REGION Cyclique Circuit Enc
	    #Etp_Att_Fin_Prd_Sous_Mel:
	        REGION Preliminaire Att Fin Prd Sous Mel
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                IF "FC_Cond_Sans_Ench"() THEN
	                    #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Fin_Lot;
	                    RETURN;
	                END_IF;
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Fin Prd Sous Mel
	        REGION Cyclique Att Fin Prd Sous Mel
	            IF NOT #Lanc_Exp.Fg_Valid_Ench_NB THEN
	                IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone, Lst_Taches := #Lanc_Exp.Lst_Taches_Att_Fin_Prd_Sous_Mel) THEN
	                    RETURN;
	                END_IF;
	                #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Test_Ench;
	                RETURN;
	            END_IF;
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone, Lst_Taches := #Lanc_Exp.Lst_Taches_Att_Fin_NB_Sous_Mel) THEN
	                RETURN;
	            END_IF;
	            #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Test_Ench;
	            RETURN;
	        END_REGION Cyclique Att Fin Prd Sous Mel
	    #Etp_Test_Ench:
	        REGION Preliminaire Test Ench
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Test Ench
	        REGION Cyclique Test Ench
	            IF "FC_Test_Lot_Suiv_Id"(Tache := #Lanc_Exp.CommunDos.Module_Commun._Tache, Pt_Zs_Enc := #Lanc_Exp.Pt_Zs)  THEN
	                #Lanc_Exp.Fg_Ench_Exp := TRUE;
	                #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Test_Ench_Fin_Mel_Lot_Suiv;
	                RETURN;
	            END_IF;
	            #Lanc_Exp.Fg_Ench_Exp := FALSE;
	            #Lanc_Exp.Pt_Zs._Fg_Enchain := FALSE;
	            #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Fin_Lot;
	            RETURN;
	        END_REGION Cyclique Test Ench
	    #Etp_Test_Ench_Fin_Mel_Lot_Suiv:
	        REGION Preliminaire Test Ench Fin Mel Lot Suiv
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Test Ench Fin Mel Lot Suiv
	        REGION Cyclique Test Ench Fin Mel Lot Suiv
	            // Test NH
	            IF #Lanc_Exp.Pt_Cel._NivHaut THEN // Sous reserve
	                #Lanc_Exp.Fg_Ench_Exp := FALSE;
	                #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Fin_Lot;
	                RETURN;
	            END_IF;
	            IF "FC_Lot_Suiv"(#Lanc_Exp.CommunDos.Module_Commun._Tache)<0 THEN
	                RETURN;
	            END_IF;
	            
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := "FC_Lot_Suiv"(#Lanc_Exp.CommunDos.Module_Commun._Tache), Lst_Taches := #Lanc_Exp.Lst_Taches_Att_Chg_Exp) THEN
	                RETURN;
	            END_IF;
	            IF "FC_Test_Lot_Suiv_Id"(Tache := #Lanc_Exp.CommunDos.Module_Commun._Tache, Pt_Zs_Enc := #Lanc_Exp.Pt_Zs) THEN
	                #Lanc_Exp.Fg_Ench_Exp := TRUE;
	            END_IF;
	            #Lanc_Exp.Fg_Ench_Exp := FALSE;
	            #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Fin_Lot;
	        END_REGION Cyclique Test Ench Fin Mel Lot Suiv
	    #Etp_Fin_Lot:
	        REGION Preliminaire Fin Lot 
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Lanc_Exp.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Lanc_Exp.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_CIR_EXP_FIN_LOT");
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Fin Lot 
	        REGION Cyclique Fin Lot 
	            #Lanc_Exp.CommunDos.Module_Commun._Etp := #Etp_Repos;
	        END_REGION Cyclique Fin Lot 
	    #Etp_Att_Acq:
	        REGION Preliminaire Att Acq
	            IF #Lanc_Exp.CommunDos.Module_Commun._Etp <> #Lanc_Exp.CommunDos.Module_Commun._EtpMemo THEN
	                
	                #Lanc_Exp.CommunDos.Module_Commun._EtpMemo := #Lanc_Exp.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Acq
	        REGION Cyclique Att Acq
	            #Lanc_Exp.Dial_Def.Reponse_Def := "FC_Recup_Rep_Def"(Index_Def := #Lanc_Exp.Dial_Def.Index_Defaut, Reponse_Ecrit => #Lanc_Exp.Dial_Def.Text_Reponse);
	            IF #Lanc_Exp.Dial_Def.Reponse_Def <> '' THEN
	                "FC_Raz_Def"(#Lanc_Exp.Dial_Def.Index_Defaut);
	                #Lanc_Exp.CommunDos.Module_Commun._Etp := #Lanc_Exp.CommunDos.Module_Commun._EtpPrec;
	                RETURN;
	            END_IF;
	        END_REGION Cyclique Att Acq  
	END_CASE;
END_FUNCTION

