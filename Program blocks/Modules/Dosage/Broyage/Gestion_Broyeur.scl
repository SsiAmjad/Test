FUNCTION "Gestion_Broyeur" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      Fg_Base : Bool;
      RAZ_Pt_Zs : "S_Suivi_Dosage";
   END_VAR

   VAR_IN_OUT 
      Broyeur : "S_Broyage";
   END_VAR

   VAR_TEMP 
      Ret_Test_Lot_Att_Tache : SInt;
      Ret_Maj_Niv : SInt;
      Ret_RD_SYS_T : Int;
      Tps_Passe : Time;
      Ret_Vid_Mobile : SInt;
      Ret_Arr_Imm_Mobile : SInt;
      Ret_Dem_Mobile : SInt;
      Ret_Test_Etat_Mobile : SInt;
      Etat_Mob : USInt;
      Vit_Atteinte : Bool;
      Tps_Act : Date_And_Time;
      mode_loc_test : Int;
      Etat_Alim : USInt;
      Etat_Broy : USInt;
      Ret : Bool;
      Msg_Def : String;
      Intensite_Vide_BR : String;
      Intensite_BR : String;
   END_VAR

   VAR CONSTANT 
      Etp_Repos : SInt := 0;
      Etp_Att_Fin_Interv : SInt := 1;
      Etp_Att_Cond : SInt := 2;
      Etp_Att_Amont_Av_Test_Grille : SInt := 3;
      Etp_Acquit_Grille_Event : SInt := 4;
      Etp_Att_Amont_Av_Demarrage : SInt := 5;
      Etp_Demarrage : SInt := 6;
      Etp_Att_Vit_Atteinte : SInt := 7;
      Etp_Att_Acq_Apres_Demarrage : SInt := 8;
      Etp_Att_Ouv_Amont : SInt := 9;
      Etp_Att_NB_Tremie_Sur_Broy : SInt := 10;
      Etp_Att_Aval_Pret : SInt := 11;
      Etp_Demarrage_Alimentateur : SInt := 12;
      Etp_Att_Vide_Tremie : SInt := 13;
      Etp_Att_Seuil_Intens : SInt := 14;
      Etp_Att_Fin_PM : SInt := 15;
      Etp_Vidange_Vis_Sous_Broy : SInt := 16;
      Etp_Test_Interv : SInt := 17;
      Etp_Maj_Base : SInt := 18;
      Etp_Fin_Lot : SInt := 19;
      Etp_Broyeur_HS : SInt := 20;
      Etp_Suspension : SInt := 21;
      Etp_Tempo_Av_Reprise : SInt := 22;
      Etp_Att_Acq : SInt := 23;
      Pos_Fermeture : SInt := 0;
      Pos_Ouverture : SInt := 1;
      Pos_Intermediaire : SInt := 2;
      Pos_Av : SInt := 0;
      Pos_Ar : SInt := 1;
      PV : SInt;
      GV : SInt;
   END_VAR


BEGIN
	#Ret_RD_SYS_T := RD_SYS_T(#Tps_Act);
	// Affichage Supervision
	"FC_Affich_Superv"(#Broyeur);
	// Affichage Etiquette
	"FC_Affich_Etiquette"(Couleur := #Broyeur.Pt_Zs._SuiviCommun._Couleur,
	                      Cel_Dest := #Broyeur.Pt_Zs._Cel_Dest,
	                      CdMat := #Broyeur.Pt_Zs._SuiviCommun._CdMat,
	                      NoLot := #Broyeur.Pt_Zs._SuiviCommun._NoLot,
	                      QteLot := #Broyeur.Pt_Zs._SuiviCommun._QteLot,
	                      Desc_Etp := #Broyeur.CommunDos.Module_Commun._DescEtp,
	                      Etiquette := #Broyeur.CommunDos);
	// Simulateur de l entree analogique
	
	#Broyeur.Simulateur.Activation := "Test_Etat_Mobile"("Index_Mobile" := #Broyeur.Mob_Broyeur, Etat := "Pret");
	#Broyeur.Simulateur.Coef := 2;
	#Broyeur.Simulateur.Offset := 20;
	#Broyeur.Simulateur.SA := #Broyeur.Regul_Alim.SA;
	#Broyeur.EAI_Broy := #Broyeur.Simulateur.EA;
	"FC_Simul_Ent_Analog"(#Broyeur.Simulateur);
	//////// Calcul SAV BR ////////
	// FC_Affich_Superv
	
	// REGULATION VITESSE ALIMENTATEUR 
	#Broyeur.Regul_Alim.Consigne := #Broyeur.Cons_Charge * #Broyeur.Intens_Nominale / 100;
	#Broyeur.Regul_Alim.Mesure := #Broyeur.EAI_Broy;
	#Broyeur.Regul_Alim.SA_Debut := #Broyeur.Pt_Zs._ParamBro._Vit_Debut_Alim;
	#Broyeur.Regul_Alim.SA_Fixe := #Broyeur.Pt_Zs._ParamBro._Vit_Fixe_Alim;
	#Broyeur.Regul_Alim.SA_Max := #Broyeur.Pt_Zs._ParamBro._Vit_Max_Alim;
	#Broyeur.Regul_Alim.SA_Min := #Broyeur.Pt_Zs._ParamBro._Vit_Min_Alim;
	#Broyeur.Regul_Alim.SA_Rampe := #Broyeur.Pt_Zs._ParamBro._Vit_Rampe_Alim;
	#Broyeur.Regul_Alim.SA_Fin_Rampe := #Broyeur.Pt_Zs._ParamBro._Vit_Fin_Rampe_Alim;
	"FC_Regulation"(#Broyeur.Regul_Alim);
	
	
	#Ret := "Test_Etat_Mobile"("Index_Mobile" := #Broyeur.Mob_Broyeur, Etat := "Libre") AND "Test_Etat_Mobile"("Index_Mobile" := #Broyeur.Mob_Alim, Etat := "Libre");
	IF #Broyeur.CommunDos.Module_Commun._Etp = #Etp_Repos AND #Etat_Alim = "Libre" AND #Etat_Broy = "Libre" THEN
	    IF "Valid_Index"(#Broyeur.Mob_Magnet) THEN
	        "FC_Ouverture_Magnetique"(#Broyeur.Mob_Magnet);
	    END_IF;
	END_IF;
	
	CASE #Broyeur.CommunDos.Module_Commun._Etp OF
	    #Etp_Repos:
	        REGION Preliminaire Repos
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'REPOS';
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.Pt_Zs := #RAZ_Pt_Zs;
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Repos
	        REGION Cyclique Repos
	            // Test de mise HORS service en differe
	            IF #Broyeur.HS_Diff THEN
	                #Broyeur.HS := TRUE;
	                #Broyeur.HS_Diff := FALSE;
	            END_IF;
	            // Attente lot a doser
	            #Ret_Test_Lot_Att_Tache := "Test_Lot_Att_Tache"(Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache, Num_Zone => #Broyeur.CommunDos.Module_Commun._NumZone);
	            IF #Ret_Test_Lot_Att_Tache = 1 THEN
	                #Broyeur.Pt_Zs := "DB_Data_Dosage"."THIS"[#Broyeur.CommunDos.Module_Commun._NumZone];
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_BR_DEBUT_LOT");
	                #Broyeur.Pt_Zs._DonneesBR[#Broyeur.Index_Br].Fg_Attente_Produit := TRUE;
	                #Broyeur.Int_Vide_Broy := 0;
	                #Broyeur.Debit_Bro := 0;
	                #Broyeur.Fg_Arret_Anticip := FALSE;
	                IF #Broyeur.HS THEN
	                    #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Broyeur_HS;
	                    RETURN;
	                ELSE
	                    #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Fin_Interv;
	                    RETURN;
	                END_IF;
	            END_IF;
	        END_REGION Cyclique Repos
	    #Etp_Att_Fin_Interv:
	        REGION Preliminaire Att Fin Interv
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Fin Interv';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Fin Interv
	        REGION Cyclique Att Fin Interv
	            IF #Broyeur.Fg_Interv THEN
	                RETURN;
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Cond;
	        END_REGION Cyclique Att Fin Interv
	    #Etp_Att_Cond:
	        REGION Preliminaire Att Cond
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Cond';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Cond
	        REGION Cyclique Att Cond
	            IF NOT "Conditions_Demarrage"(#Broyeur) THEN
	                RETURN;
	            END_IF;
	            #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                      Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                      Niveau := "NIV_BR_COND_ATTEINTES");
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Amont_Av_Test_Grille;
	        END_REGION Cyclique Att Cond
	    #Etp_Att_Amont_Av_Test_Grille:
	        REGION Preliminaire Att Amont Av Test Grille
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Amont Av Test Grille';
	                #Broyeur.Fg_Bro_Enc := TRUE;
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Amont Av Test Grille
	        REGION Cyclique Att Amont Av Test Grille
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone, Lst_Taches := #Broyeur.Lst_Taches_Att_Amont_Av_Test_Grille) THEN
	                RETURN;
	            END_IF;
	            // Lancement calcul energie
	            #Broyeur.Fg_Lanc_Calc_Energie := TRUE;
	            // Si on doit arreter le broyeur : attent l'arret puis l'acquit grille
	            IF #Broyeur.Fg_Arr_Broy_Chang_Grille THEN
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Acquit_Grille_Event;
	                RETURN;
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Amont_Av_Demarrage;
	            RETURN;
	        END_REGION Cyclique Att Amont Av Test Grille
	    #Etp_Acquit_Grille_Event:
	        REGION Preliminaire Acquit Grille Event
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Acquit Grille Event';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Acquit Grille Event
	        REGION Cyclique Acquit Grille Event
	
	        END_REGION Cyclique Acquit Grille Event
	    #Etp_Att_Amont_Av_Demarrage:
	        REGION Preliminaire Att Amont Av Demarrage
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Amont Av Demarrage';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Amont Av Demarrage
	        REGION Cyclique Att Amont Av Demarrage
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone, Lst_Taches := #Broyeur.Lst_Taches_Att_Amont_Av_Demarrage) THEN
	                RETURN;
	            END_IF;
	            #Broyeur.Pt_Zs._DonneesBR[#Broyeur.Index_Br].DebutLot :=#Tps_Act;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Demarrage;
	        END_REGION Cyclique Att Amont Av Demarrage
	    #Etp_Demarrage:
	        REGION Preliminaire Demarrage
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Demarrage';
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	                "Consignes_Regulation"(#Broyeur);
	                IF  "Valid_Index"(#Broyeur.Mob_Magnet) THEN
	                    "FC_Fermeture_Magnetique"(#Broyeur.Mob_Magnet);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Decol) THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Decol,
	                                   Position := #PV);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vol_Air) THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Air,
	                                   Position := #Pos_Fermeture);
	                END_IF;
	                IF  "Valid_Index"(#Broyeur.Mob_Vent) THEN
	                    #Broyeur.SAV_Vent := #Broyeur.Pt_Zs._ParamBro._Vit_Ventil;
	                    "SAV_Mob"(Index_Mobile:= #Broyeur.Mob_Vent, Vitesse := #Broyeur.SAV_Vent);
	                END_IF;
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Demarrage
	        REGION Cyclique Demarrage
	            IF "Valid_Index"(#Broyeur.Mob_Vol_Sens) THEN
	                IF #Broyeur.E_Sens_AR THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Sens,
	                                   Position := #Pos_Ar);
	                END_IF;
	                IF #Broyeur.E_Sens_AV THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Sens,
	                                   Position := #Pos_Av);
	                END_IF;
	            END_IF;
	            IF "Valid_Index"(#Broyeur.Mob_Vol_Air) THEN
	                IF NOT "Test_Etat_Mobile"("Index_Mobile":= #Broyeur.Mob_Vent, Etat:= "Pret") THEN
	                    RETURN;
	                END_IF;
	                IF #Broyeur.Pt_Zs._ParamBro._Volet_Air = 'F' THEN
	                    "FC_Posit_Mob"(Index_Mob:=#Broyeur.Mob_Vol_Air ,Position:=#Pos_Fermeture);
	                ELSIF #Broyeur.Pt_Zs._ParamBro._Volet_Air = 'O' THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Air,Position :=#Pos_Ouverture);
	                ELSIF #Broyeur.Pt_Zs._ParamBro._Volet_Air = 'I' THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Air,Position := #Pos_Intermediaire);
	                ELSE
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Air,
	                                   Position := #Pos_Ouverture);
	                END_IF;
	                
	            END_IF;
	            IF "Test_Demarrage_Autres_BR"(#Broyeur) THEN
	                #Broyeur.Fg_Dem_Autre_BR := "Test_Demarrage_Autres_BR"(#Broyeur);
	            END_IF;
	            IF #Broyeur.Fg_Dem_Autre_BR THEN
	                IF NOT "Tempo"(Tps_Picke := #Broyeur.CommunDos.Module_Commun._TpsPicke, Duree := #Broyeur.Tps_Entre_Dem, Anticip := FALSE, Tps_Passe => #Tps_Passe) THEN
	                    #Broyeur.Fg_Dem_Autre_BR := FALSE;
	                    RETURN;
	                END_IF;
	            END_IF;
	            #Broyeur.Fg_Dem_Enc := TRUE;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Vit_Atteinte;
	            RETURN;
	        END_REGION Cyclique Demarrage
	    #Etp_Att_Vit_Atteinte:
	        REGION Prceliminaire Att Vit Atteinte
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Vit Atteinte';
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                //=== Traitement cas retour de defaut ===//
	                IF #Broyeur.Dial_Def.Reponse_Def <> '' THEN
	                    #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	                    CASE #Broyeur.Dial_Def.Num_Def_Etape OF
	                        1:
	                            GOTO Att_Vit_Atteinte_DEF1;
	                    END_CASE;
	                END_IF;
	                //=== Traitement cas retour de defaut ===//
	                IF "Valid_Index"(#Broyeur.Mob_Broyeur) THEN
	                    "Demar_BR"(#Broyeur);
	                END_IF;
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.Deb_Seq);
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION  Preliminaire Att Vit Atteinte
	        REGION Cyclique Att Vit Atteinte
	            IF "Valid_Index"(#Broyeur.Mob_Broyeur) THEN
	                IF NOT "Test_Etat_Mobile"("Index_Mobile" := #Broyeur.Mob_Broyeur, Etat:="Pret") THEN
	                    #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	                    RETURN;
	                END_IF;
	            END_IF;
	            #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                      Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                      Niveau := "NIV_BR_PRET");
	            #Vit_Atteinte := ABS( #Broyeur.EAV_Broy - (USINT_TO_REAL(#Broyeur.SAV_Broy) * UINT_TO_REAL(#Broyeur.Vit_Max_Broy))/100) <= #Broyeur.Tol_Vit_Atteinte ;
	            // TEST
	            IF #Broyeur.EAI_Broy <= 0 THEN
	                RETURN;
	            END_IF;
	            IF #Vit_Atteinte OR #Broyeur.E_Vit_Atteinte THEN
	                // Memorisation de l intensite a vide
	                #Broyeur.Int_Vide_Broy := #Broyeur.EAI_Broy; 
	                #Broyeur.Regul_Alim.Valid := TRUE;
	                #Broyeur.Fg_Dem_Enc := FALSE;
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Acq_Apres_Demarrage;
	                RETURN;
	            END_IF;
	            IF "Tempo"(Duree:=#Broyeur.Tps_Vit_Atteinte, Tps_Picke:=#Broyeur.CommunDos.Module_Commun._TpsPicke, Anticip:=FALSE, Tps_Passe=>#Tps_Passe) THEN
	                #Broyeur.Dial_Def.Index_Defaut := "Dialog_Defaut"(Fg_Base:=#Fg_Base, Msg_Defaut := CONCAT(IN1:='Defaut vitesse non atteinte pour ', IN2:=#Broyeur.Nom),
	                                                                  Type_Defaut := 0,
	                                                                  Automatisme := #Broyeur.Pt_Zs._SuiviCommun._CdProc,
	                                                                  Num_Lot := #Broyeur.Pt_Zs._SuiviCommun._NoLot,
	                                                                  Origine_Defaut := #Broyeur.Nom,
	                                                                  Libelle_Origine := #Broyeur.CommunDos.Module_Commun._NomTache,
	                                                                  Acq1 := 'Relance',
	                                                                  Acq2 := '',
	                                                                  Acq3 := '',
	                                                                  Acq4 := '',
	                                                                  Acq5 := '',
	                                                                  Acq6 := '',
	                                                                  Acq7 := '',
	                                                                  Acq8 := '',
	                                                                  Acq_Choisi := -1,
	                                                                  Date_Arrivee := #Tps_Act);
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Acq;
	                RETURN;
	            END_IF;
	        Att_Vit_Atteinte_DEF1:
	            //========================== Traitement des reponses defaut ==========================//
	            IF (#Broyeur.Dial_Def.Reponse_Def = 'Relance') THEN
	                // Reinitialisation de la tempo
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke_Max);
	                // RAZ message defaut
	                #Broyeur.Dial_Def.Reponse_Def := '';
	                RETURN;
	            END_IF;
	            //========================== Traitement des reponses defaut ==========================//
	        END_REGION Cyclique Att Vit Atteinte
	    #Etp_Att_Acq_Apres_Demarrage:
	        REGION Preliminaire Att Acq Apres Demarrage
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Acq Apres Demarrage';
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_BR_VIT_ATTEINTE");
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Acq Apres Demarrage
	        REGION Cyclique Att Acq Apres Demarrage
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Ouv_Amont;
	        END_REGION Cyclique Att Acq Apres Demarrage
	    #Etp_Att_Ouv_Amont:
	        REGION Preliminaire Att Ouv Amont
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Ouv Amont';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Ouv Amont
	        REGION Cyclique Att Ouv Amont
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone, Lst_Taches := #Broyeur.Lst_Taches_Att_Ouv_Amont) THEN
	                RETURN;
	            END_IF;
	            IF "Valid_Index"(#Broyeur.Mob_Trappe ) THEN
	                "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Trappe,
	                               Position := #Pos_Ouverture);
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_NB_Tremie_Sur_Broy;
	        END_REGION Cyclique Att Ouv Amont
	    #Etp_Att_NB_Tremie_Sur_Broy:
	        REGION Preliminaire Att NB Tremie Sur Broy
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att NB Tremie Sur BR';
	                "Maj_Qte_Tache"(Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                Qte := "Calc_Qte_Tache"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone, Lst_Amont := #Broyeur.Lst_Taches_Amont_Qte));
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                //=== Traitement cas retour de defaut ===//
	                IF #Broyeur.Dial_Def.Reponse_Def <> '' THEN
	                    #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	                    CASE #Broyeur.Dial_Def.Num_Def_Etape OF
	                        1:
	                            GOTO Att_NB_Tremie_Sur_Broy_DEF1;
	                    END_CASE;
	                END_IF;
	                //=== Traitement cas retour de defaut ===//
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke_Max);
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att NB Tremie Sur Broy
	        REGION Cyclique Att NB Tremie Sur Broy
	            IF "Tempo"(Tps_Picke := #Broyeur.CommunDos.Module_Commun._TpsPicke_Max, Duree := #Broyeur.Tps_Max_NB, Anticip := FALSE, Tps_Passe => #Tps_Passe) THEN
	                #Broyeur.Dial_Def.Num_Def_Etape := 1;
	                #Msg_Def := CONCAT(IN1 := 'Defaut: Att NB TRM_AV_', IN2 := #Broyeur.Nom);
	                #Broyeur.Dial_Def.Index_Defaut := "Dialog_Defaut"(Fg_Base:=#Fg_Base, Msg_Defaut := #Msg_Def,
	                                                                  Type_Defaut := 0,
	                                                                  Automatisme := #Broyeur.CommunDos.Module_Commun._Autom,
	                                                                  Num_Lot := #Broyeur.CommunDos.Module_Commun._NumLot,
	                                                                  Origine_Defaut := #Broyeur.Nom,
	                                                                  Libelle_Origine := #Broyeur.CommunDos.Module_Commun._NomTache,
	                                                                  Acq1 := 'Relance',
	                                                                  Acq2 := 'Abandon',
	                                                                  Acq3 := '',
	                                                                  Acq4 := '',
	                                                                  Acq5 := '',
	                                                                  Acq6 := '',
	                                                                  Acq7 := '',
	                                                                  Acq8 := '',
	                                                                  Acq_Choisi := -1,
	                                                                  Date_Arrivee := #Tps_Act);
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Acq;
	                RETURN;
	            END_IF;
	        Att_NB_Tremie_Sur_Broy_DEF1:
	            //========================== Traitement des reponses defaut ==========================//
	            IF (#Broyeur.Dial_Def.Reponse_Def = 'Relance') THEN
	                // Reinitialisation de la tempo
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke_Max);
	                // RAZ message defaut
	                #Broyeur.Dial_Def.Reponse_Def := '';
	                RETURN;
	            END_IF;
	            IF (#Broyeur.Dial_Def.Reponse_Def = 'Abandon') THEN
	                // RAZ message defaut
	                #Broyeur.Dial_Def.Reponse_Def := '';
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Aval_Pret;
	                RETURN;
	            END_IF;
	            //========================== Traitement des reponses defaut ==========================//
	            IF NOT #Broyeur.NB THEN
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	            END_IF;
	            IF NOT "Tempo"(Tps_Picke:=#Broyeur.CommunDos.Module_Commun._TpsPicke,Duree:= #Broyeur.Tps_NB,Anticip:=FALSE,Tps_Passe=>#Tps_Passe) THEN
	                RETURN;
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Aval_Pret;
	        END_REGION Cyclique Att NB Tremie Sur Broy
	    #Etp_Att_Aval_Pret:
	        REGION Preliminaire Att Aval Pret
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Aval Pret';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Aval Pret
	        REGION Cyclique Att Aval Pret
	            // Demarrage sans anticipation
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone, Lst_Taches := #Broyeur.Lst_Taches_Att_Aval_Pret) THEN
	                RETURN;
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Demarrage_Alimentateur;
	        END_REGION Cyclique Att Aval Pret
	    #Etp_Demarrage_Alimentateur:
	        REGION Preliminaire Demarrage Alimentateur
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Demarrage Alimentateur';
	                IF "Valid_Index"(#Broyeur.Mob_Alim) THEN
	                    #Ret_Dem_Mobile := "Dem_Mobile"(#Broyeur.Mob_Alim);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vol_Haut_Couche) THEN
	                    IF #Broyeur.Pt_Zs._ParamBro._Hauteur_Couche = 'F' THEN
	                        "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Haut_Couche,
	                                       Position := #Pos_Fermeture);
	                    END_IF;
	                    IF #Broyeur.Pt_Zs._ParamBro._Hauteur_Couche = 'O' THEN
	                        "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Haut_Couche,
	                                       Position := #Pos_Ouverture);
	                    END_IF;
	                    IF #Broyeur.Pt_Zs._ParamBro._Hauteur_Couche = 'I' THEN
	                        "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Haut_Couche,
	                                       Position := #Pos_Intermediaire);
	                    END_IF;
	                END_IF;
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_BR_ALIM_MARCHE");
	                #Broyeur.Deb_BR := "Tps_Mob"(#Broyeur.Mob_Alim);
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Demarrage Alimentateur
	        REGION Cyclique Demarrage Alimentateur
	            // MEMORISATION DE L INTENSITE SI ALIMENTATEUR PRET ET VITESSE ATTEINTE
	            // 
	            IF "Suspension_BR"(#Broyeur) THEN
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Suspension;
	                RETURN;
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._ParCal._FgCalTps := TRUE;
	            #Broyeur.Regul_Alim.Valid := TRUE;
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone, Lst_Taches := #Broyeur.Lst_Taches_Att_Fin_Amont) THEN
	                RETURN;
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Vide_Tremie;
	        END_REGION Cyclique Demarrage Alimentateur
	    #Etp_Att_Vide_Tremie:
	        REGION Preliminaire Att Vide Tremie
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Vide Tremie';
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                //=== Traitement cas retour de defaut ===//
	                IF #Broyeur.Dial_Def.Reponse_Def <> '' THEN
	                    #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	                    CASE #Broyeur.Dial_Def.Num_Def_Etape OF
	                        1:
	                            GOTO Att_Vide_Tremie_DEF1;
	                    END_CASE;
	                END_IF;
	                //=== Traitement cas retour de defaut ===//
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke_Max);
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Vide Tremie
	        REGION Cyclique Att Vide Tremie
	            IF "Tempo"(Tps_Picke := #Broyeur.CommunDos.Module_Commun._TpsPicke_Max, Duree := #Broyeur.Tps_Max_NB, Anticip := FALSE, Tps_Passe => #Tps_Passe) THEN
	                #Broyeur.Dial_Def.Num_Def_Etape := 1;
	                #Msg_Def := CONCAT(IN1 := 'Defaut: Att vidange TRM_AV_', IN2 := #Broyeur.Nom);
	                #Broyeur.Dial_Def.Index_Defaut := "Dialog_Defaut"(Fg_Base:=#Fg_Base, Msg_Defaut := #Msg_Def,
	                                                                  Type_Defaut := 0,
	                                                                  Automatisme := #Broyeur.Pt_Zs._SuiviCommun._CdProc,
	                                                                  Num_Lot := #Broyeur.Pt_Zs._SuiviCommun._NoLot,
	                                                                  Origine_Defaut := #Broyeur.Nom,
	                                                                  Libelle_Origine := #Broyeur.CommunDos.Module_Commun._NomTache,
	                                                                  Acq1 := 'Relance',
	                                                                  Acq2 := 'Abandon',
	                                                                  Acq3 := '',
	                                                                  Acq4 := '',
	                                                                  Acq5 := '',
	                                                                  Acq6 := '',
	                                                                  Acq7 := '',
	                                                                  Acq8 := '',
	                                                                  Acq_Choisi := -1,
	                                                                  Date_Arrivee := #Tps_Act);
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Acq;
	                RETURN;
	            END_IF;
	        Att_Vide_Tremie_DEF1:
	            //========================== Traitement des reponses defaut ==========================//
	            IF (#Broyeur.Dial_Def.Reponse_Def = 'Relance') THEN
	                // Reinitialisation de la tempo
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke_Max);
	                // RAZ message defaut
	                #Broyeur.Dial_Def.Reponse_Def := '';
	                RETURN;
	            END_IF;
	            IF (#Broyeur.Dial_Def.Reponse_Def = 'Abandon') THEN
	                // RAZ message defaut
	                #Broyeur.Dial_Def.Reponse_Def := '';
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Seuil_Intens;
	                RETURN;
	            END_IF;
	            //========================== Traitement des reponses defaut ==========================//
	            IF #Broyeur.NB THEN
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	            END_IF;
	            IF NOT "Tempo"(Tps_Picke := #Broyeur.CommunDos.Module_Commun._TpsPicke, Duree := #Broyeur.Tps_NB, Anticip := FALSE, Tps_Passe => #Tps_Passe) THEN
	                RETURN;
	            END_IF;
	            IF "Suspension_BR"(#Broyeur) THEN
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Suspension;
	                RETURN;
	            END_IF;
	            #Broyeur.Regul_Alim.Etape := 6; //Vitesse FIXE
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Seuil_Intens;
	        END_REGION Cyclique Att Vide Tremie
	    #Etp_Att_Seuil_Intens:
	        REGION Preliminaire Att Seuil Intens
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Seuil Intens';
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                //=== Traitement cas retour de defaut ===//
	                IF #Broyeur.Dial_Def.Reponse_Def <> '' THEN
	                    #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	                    CASE #Broyeur.Dial_Def.Num_Def_Etape OF
	                        1:
	                            GOTO Att_Seuil_Intens_DEF1;
	                    END_CASE;
	                END_IF;
	                //=== Traitement cas retour de defaut ===//
	                // Diminution vitesse aspiration
	                
	                IF "Valid_Index"(#Broyeur.Mob_Decol ) THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Decol,
	                                   Position := #GV);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vol_Air ) THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Air,
	                                   Position := #Pos_Fermeture);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vib) THEN
	                    #Ret_Dem_Mobile := "Dem_Mobile"(#Broyeur.Mob_Vib);
	                END_IF;
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_BR_FIN_PRD_BR");
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke_Max);
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Seuil Intens
	        REGION Cyclique Att Seuil Intens
	            IF "Tempo"(Tps_Picke := #Broyeur.CommunDos.Module_Commun._TpsPicke_Max, Duree := #Broyeur.Tps_Max_Int_Vide, Anticip := FALSE, Tps_Passe => #Tps_Passe) THEN
	                #Broyeur.Dial_Def.Num_Def_Etape := 1;
	                VAL_STRG(IN := #Broyeur.EAI_Broy,
	                         SIZE := 6,
	                         PREC := 2,
	                         FORMAT := 0,
	                         P := 1,
	                         OUT => #Intensite_BR);
	                VAL_STRG(IN := #Broyeur.Int_Vide_Broy,
	                         SIZE := 6,
	                         PREC := 2,
	                         FORMAT := 0,
	                         P := 1,
	                         OUT => #Intensite_Vide_BR);
	                #Msg_Def := CONCAT(IN1 := 'Defaut: Att Seuil Intensite ', IN2 := #Broyeur.Nom, IN3 := ': Intensite a vide =', IN4 := #Intensite_Vide_BR, IN5 := 'A et intensite actuelle =', IN6:=#Intensite_BR,IN7:='A');
	                #Broyeur.Dial_Def.Index_Defaut := "Dialog_Defaut"(Fg_Base:=#Fg_Base, Msg_Defaut := #Msg_Def,
	                                                                  Type_Defaut := 0,
	                                                                  Automatisme := #Broyeur.Pt_Zs._SuiviCommun._CdProc,
	                                                                  Num_Lot := #Broyeur.Pt_Zs._SuiviCommun._NoLot,
	                                                                  Origine_Defaut := #Broyeur.Nom,
	                                                                  Libelle_Origine := #Broyeur.CommunDos.Module_Commun._NomTache,
	                                                                  Acq1 := 'Relance',
	                                                                  Acq2 := 'Abandon',
	                                                                  Acq3 := '',
	                                                                  Acq4 := '',
	                                                                  Acq5 := '',
	                                                                  Acq6 := '',
	                                                                  Acq7 := '',
	                                                                  Acq8 := '',
	                                                                  Acq_Choisi := -1,
	                                                                  Date_Arrivee := #Tps_Act);
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Acq;
	                RETURN;
	            END_IF;
	        Att_Seuil_Intens_DEF1:
	            //========================== Traitement des reponses defaut ==========================//
	            IF (#Broyeur.Dial_Def.Reponse_Def = 'Relance') THEN
	                // Reinitialisation de la tempo
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke_Max);
	                // RAZ message defaut
	                #Broyeur.Dial_Def.Reponse_Def := '';
	                RETURN;
	            END_IF;
	            IF (#Broyeur.Dial_Def.Reponse_Def = 'Abandon') THEN
	                // RAZ message defaut
	                #Broyeur.Dial_Def.Reponse_Def := '';
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Fin_PM;
	                RETURN;
	            END_IF;
	            //========================== Traitement des reponses defaut ==========================//
	            IF #Broyeur.EAI_Broy > (#Broyeur.Int_Vide_Broy + #Broyeur.Tol_Int_Vide_Broy) THEN
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	            END_IF;
	            IF NOT "Tempo"(Tps_Picke := #Broyeur.CommunDos.Module_Commun._TpsPicke, Duree := #Broyeur.Tps_Int_Vide, Anticip := FALSE, Tps_Passe => #Tps_Passe) THEN
	                RETURN;
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Att_Fin_PM;
	            IF "Suspension_BR"(#Broyeur) THEN
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Suspension;
	                RETURN;
	            END_IF;
	        END_REGION Cyclique Att Seuil Intens
	    #Etp_Att_Fin_PM:
	        REGION Preliminaire Att Fin PM
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Att Fin PM';
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                (*
	                // Arret surveillance grilles en cours
	                 if(_mbGrillesAtt)
	                 {
	                   _mbGrillesAtt->Ordre=0;
	                 }
	                 if(_mbGrillesDeg)
	                 {
	                   _mbGrillesDeg->Ordre=0;
	                 }
	                 *)
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke_Max);
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_BR_ARR_ALIM");
	                IF "Valid_Index"(#Broyeur.Mob_Trappe) THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Trappe,
	                                   Position := #Pos_Fermeture);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vol_Haut_Couche)  THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Haut_Couche,
	                                   Position := #Pos_Fermeture);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Alim) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Alim);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vent) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Vent);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Broyeur) THEN
	                    IF "Valid_Index"(#Broyeur.Mob_Alim) THEN
	                        IF "Test_Etat_Mobile"(Index_Mobile := #Broyeur.Mob_Alim, Etat := "Libre") THEN
	                            RETURN;
	                        END_IF;
	                    END_IF;
	                    #Broyeur.Tps_Net_BR := "Tps_Mob"(#Broyeur.Mob_Alim) - #Broyeur.Deb_BR;
	                    #Broyeur.Tps_Br := T_DIFF(IN1 := #Tps_Act, IN2 := #Broyeur.Deb_Seq);
	                    #Ret_Vid_Mobile := "Vid_Mobile"(#Broyeur.Mob_Broyeur);
	                END_IF;
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Fin PM
	        REGION Cyclique Att Fin PM
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Vidange_Vis_Sous_Broy;
	        END_REGION Cyclique Att Fin PM
	    #Etp_Vidange_Vis_Sous_Broy:
	        REGION Preliminaire Vidange Vis Sous Broy
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'Vidange Vis Sous BR';
	                #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                          Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                          Niveau := "NIV_BR_FIN_PM_SOUS_BR");
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Vidange Vis Sous Broy
	        REGION Cyclique Vidange Vis Sous Broy
	            IF NOT "FC_Test_Niv_AmontAval"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone, Lst_Taches := #Broyeur.Lst_Taches_Vid_Vis_Sous_Broy) THEN
	                RETURN;
	            END_IF;
	            // QTE
	            IF NOT "FC_Action_Ap_Cir_Sous_Broy"(#Broyeur) THEN
	                RETURN;
	            END_IF;
	            IF "Valid_Index"(#Broyeur.Mob_Decol) THEN
	                "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Decol,
	                               Position := #PV);
	                #Ret_Vid_Mobile := "Vid_Mobile"(#Broyeur.Mob_Decol);
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Maj_Base;
	        END_REGION Cyclique Vidange Vis Sous Broy
	    #Etp_Test_Interv:
	        REGION Preliminaire Test Interv
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._EtpPrec := #Broyeur.CommunDos.Module_Commun._Etp;
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'TEST INTERV';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Test Interv
	        REGION Cyclique Test Interv
	            
	        END_REGION Cyclique Test Interv
	    #Etp_Maj_Base:
	        REGION Preliminaire Maj Base
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'MAJ BASE';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Maj Base
	        REGION Cyclique Maj Base
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Fin_Lot;
	        END_REGION Cyclique Maj Base
	    #Etp_Fin_Lot:
	        REGION Preliminaire Fin Lot
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'FIN LOT';
	                #Broyeur.Regul_Alim.Valid := FALSE; // Etape STOP
	                #Broyeur.Regul_Alim.Etape := 0; // Etape STOP
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Fin Lot
	        REGION Cyclique Fin Lot
	            #Ret_Maj_Niv := "Maj_Niv"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone,
	                                      Num_Tache := #Broyeur.CommunDos.Module_Commun._Tache,
	                                      Niveau := "NIV_BR_FIN_LOT");
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Repos;
	        END_REGION Cyclique Fin Lot
	    #Etp_Broyeur_HS:
	        REGION Preliminaire Broyeur HS
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'BR HS';
	                IF "Valid_Index"(#Broyeur.Mob_Trappe) THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Trappe,
	                                   Position := #Pos_Fermeture);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vol_Haut_Couche) THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Haut_Couche,
	                                   Position := #Pos_Fermeture);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Alim) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Alim);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vent) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Vent);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Decol) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Decol);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vib) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Vib);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Broyeur) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Broyeur);
	                END_IF;
	                #Broyeur.Fg_Dem_Enc := FALSE;
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Broyeur HS
	        REGION Cyclique Broyeur HS
	            IF #Broyeur.Fg_Fin_Lot_SiHS THEN
	                IF "FC_Test_Niv_AmontAval"(Num_Zone := #Broyeur.CommunDos.Module_Commun._NumZone, Lst_Taches := #Broyeur.Lst_Taches_Att_Fin_Amont) THEN
	                    #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Fin_Lot;
	                    RETURN;
	                END_IF;
	            END_IF;
	            IF NOT #Broyeur.HS THEN
	                IF #Broyeur.CommunDos.Module_Commun._EtpPrec < #Etp_Demarrage THEN
	                    #Broyeur.CommunDos.Module_Commun._Etp := #Broyeur.CommunDos.Module_Commun._EtpPrec;
	                    RETURN;
	                END_IF;
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Demarrage;
	                RETURN;
	            END_IF;
	        END_REGION Cyclique Broyeur HS
	    #Etp_Suspension:
	        REGION Preliminaire Suspension
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'SUSPENSION';
	                IF "Valid_Index"(#Broyeur.Mob_Vol_Air) THEN
	                    "FC_Posit_Mob"(Index_Mob := #Broyeur.Mob_Vol_Air,
	                                   Position := #Pos_Fermeture);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Alim) THEN
	                    #Ret_Vid_Mobile := "Vid_Mobile"(#Broyeur.Mob_Alim);
	                END_IF;
	                IF  "Valid_Index"(#Broyeur.Mob_Broyeur) THEN
	                    #Ret_Vid_Mobile := "Vid_Mobile"(#Broyeur.Mob_Broyeur);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vent ) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Vent);
	                END_IF;
	                IF  "Valid_Index"(#Broyeur.Mob_Decol) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Decol);
	                END_IF;
	                IF "Valid_Index"(#Broyeur.Mob_Vib) THEN
	                    #Ret_Arr_Imm_Mobile := "Arr_Imm_Mobile"(#Broyeur.Mob_Vib);
	                END_IF;
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Suspension
	        REGION Cyclique Suspension   
	            IF NOT "Suspension_BR"(#Broyeur) THEN
	                #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Tempo_Av_Reprise;
	                RETURN;
	            END_IF;
	        END_REGION Cyclique Suspension
	    #Etp_Tempo_Av_Reprise:
	        REGION Preliminaire Tempo Av Reprise
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'TEMPO AV REPRISE';
	                #Ret_RD_SYS_T := RD_SYS_T(#Broyeur.CommunDos.Module_Commun._TpsPicke);
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Tempo Av Reprise
	        REGION Cyclique Tempo Av Reprise
	            IF NOT "Tempo"(Tps_Picke := #Broyeur.CommunDos.Module_Commun._TpsPicke, Duree := #Broyeur.Tps_Suspension, Anticip := FALSE, Tps_Passe => #Tps_Passe) THEN
	                RETURN;
	            END_IF;
	            #Broyeur.CommunDos.Module_Commun._Etp := #Etp_Demarrage;
	        END_REGION Cyclique Tempo Av Reprise
	    #Etp_Att_Acq:
	        REGION Preliminaire Att Acq
	            IF #Broyeur.CommunDos.Module_Commun._Etp <> #Broyeur.CommunDos.Module_Commun._EtpMemo THEN
	                #Broyeur.CommunDos.Module_Commun._DescEtp := 'ATT ACQ';
	                #Broyeur.CommunDos.Module_Commun._EtpMemo := #Broyeur.CommunDos.Module_Commun._Etp;
	            END_IF;
	        END_REGION Preliminaire Att Acq
	        REGION Cyclique Att Acq
	            #Broyeur.Dial_Def.Reponse_Def := "FC_Recup_Rep_Def"(Index_Def:=#Broyeur.Dial_Def.Index_Defaut, Reponse_Ecrit=>#Broyeur.Dial_Def.Text_Reponse);
	            IF #Broyeur.Dial_Def.Reponse_Def <> '' THEN
	                "FC_Raz_Def"(#Broyeur.Dial_Def.Index_Defaut);
	                #Broyeur.CommunDos.Module_Commun._Etp := #Broyeur.CommunDos.Module_Commun._EtpPrec;
	                RETURN;
	            END_IF;
	        END_REGION Cyclique Att Acq        
	END_CASE;
END_FUNCTION

