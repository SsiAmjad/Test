FUNCTION "Proc_Valid_CB" : String
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      Num_Poste : UInt;
      Num_Lot : String;
      Article : String;
      Lieu_Dos : String;
      CB : String;
      Proc : String;
   END_VAR

   VAR_OUTPUT 
      Err_Sql : String;
      Msg_Def : String;
   END_VAR

   VAR_IN_OUT 
      Compo_Mag : "S_Compo_Mag";
   END_VAR

   VAR_TEMP 
      parameters_value : Array[0..20] of String;
      Resultat_Decode : WString[4000];
      status : Int;
      Rep_temp : String;
   END_VAR


BEGIN
	//Insertion des parametres 
	#parameters_value[0] := UINT_TO_STRING("Num_Poste");
	#parameters_value[1] := #Num_Lot;
	#parameters_value[2] := #Article;
	#parameters_value[3] := #Lieu_Dos;
	#parameters_value[4] := #CB;
	#parameters_value[5] := #Proc;
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	
	#Resultat_Decode := "COMBASE"(procedure_name := 'SP_Dos_ValidCb',
	                              values_of_record := #parameters_value,
	                              parameters_number := 5,
	                              ERROR_MESSAGE => #Err_Sql);
	
	//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++//
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := 'REPONSE:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Proc_Valid_CB);
	
	IF #Proc_Valid_CB = 'NOK' THEN
	    #status := "FCT_DECODE_TRAME"(KEYWORD := 'MESS:',
	                                  BUFFER := #Resultat_Decode,
	                                  Retour_VAL => #Msg_Def);
	    RETURN;
	ELSIF #Proc_Valid_CB = 'OK' THEN
	    #status := "FCT_DECODE_TRAME"(KEYWORD := 'MESS:',
	                                  BUFFER := #Resultat_Decode,
	                                  Retour_VAL => #Msg_Def);
	    IF #Msg_Def = 'VIDE' THEN
	        RETURN;
	    END_IF;
	ELSE
	    RETURN;
	END_IF;
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := 'MESS:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Msg_Def);
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|ZONE:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Compo_Mag.Magasin);
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|MAT:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Compo_Mag.Cd_Mat);
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|LBMAT:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Compo_Mag.Lib_Mat);
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|LOT:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Compo_Mag.Num_Lot);
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|QtLot:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#Compo_Mag.Qte_Lot := STRING_TO_REAL(#Rep_temp);
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|PEREMP:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Compo_Mag.Peremp);
	
	#status := "FCT_DECODE_TRAME"(KEYWORD := '|COND:',
	                              BUFFER := #Resultat_Decode,
	                              Retour_VAL => #Rep_temp);
	#Compo_Mag.Cond := STRING_TO_UINT(#Rep_temp);
END_FUNCTION

