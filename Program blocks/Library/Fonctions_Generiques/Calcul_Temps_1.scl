FUNCTION "Calcul_Temps_1" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_IN_OUT 
      Mobile : "S_Mobile";
   END_VAR

   VAR_TEMP 
      Ret_RD_Sys_T : Int;
      TpsPassé : Time;
   END_VAR

   VAR CONSTANT 
      REPOS_Q : SInt := 0;
      Att_Marche_Trans : SInt := 1;
      Test_Tempo : SInt := 2;
   END_VAR


BEGIN
	CASE #Mobile.ParCal._EtpT OF
	(*      
	 *************************************** *************************************** *************************************** *************************************** *************************************** ***************************************
	                                                                                 ╔════════════════════════════════════╗
	                                                                                 ║            Etape "Repos"           ║
	                                                                                 ╚════════════════════════════════════╝
	 *************************************** *************************************** *************************************** *************************************** *************************************** ***************************************                                                                                        
	*)
	    #REPOS_Q:
	        REGION traitement preliminaire
	            IF (#Mobile.ParCal._EtpT <> #Mobile.ParCal._EtpMemoT) THEN
	                #Mobile.ParCal._EtpMemoT := #Mobile.ParCal._EtpT;
	            END_IF;
	        END_REGION
	        REGION TRAITEMENT CYCLIQUE
	            //Attente Lancement
	            IF #Mobile.ParCal._FgCalTps THEN
	                #Mobile.ParCal._EtpT := #Att_Marche_Trans; //att_marche_transporteur
	            END_IF;
	            RETURN;
	        END_REGION
	(*      
	 *************************************** *************************************** *************************************** *************************************** *************************************** ***************************************
	                                                                                 ╔════════════════════════════════════╗
	                                                                                 ║Etape "Attente Marche Transporteur" ║
	                                                                                 ╚════════════════════════════════════╝
	 *************************************** *************************************** *************************************** *************************************** *************************************** ***************************************                                                                                        
	*)
	    #Att_Marche_Trans:
	        REGION traitement preliminaire
	            IF (#Mobile.ParCal._EtpT <> #Mobile.ParCal._EtpMemoT) THEN
	                #Mobile.ParCal._EtpMemoT := #Mobile.ParCal._EtpT;
	            END_IF;
	        END_REGION
	        REGION TRAITEMENT CYCLIQUE
	            //Test Arret calcul
	            IF #Mobile.ParCal._FgCalTps = FALSE THEN
	                #Mobile.ParCal._EtpT := #REPOS_Q;
	                RETURN;
	            END_IF;
	            //test marche transporteur
	            IF NOT (#Mobile.Etat ="Pret")  AND NOT (#Mobile.Etat = "Vid") THEN
	                RETURN;
	            END_IF;
	            #Mobile.ParCal._EtpT := #Test_Tempo;
	            RETURN;
	        END_REGION
	(*      
	 *************************************** *************************************** *************************************** *************************************** *************************************** ***************************************
	                                                                                 ╔════════════════════════════════════╗
	                                                                                 ║          Etape "Test Tempo"        ║
	                                                                                 ╚════════════════════════════════════╝
	 *************************************** *************************************** *************************************** *************************************** *************************************** ***************************************                                                                                        
	*)
	    #Test_Tempo:
	        REGION traitement preliminaire
	            IF (#Mobile.ParCal._EtpT <> #Mobile.ParCal._EtpMemoT) THEN
	                //Memorisation de l'etape encours
	                #Mobile.ParCal._EtpMemoT := #Mobile.ParCal._EtpT;
	                #Ret_RD_Sys_T := RD_SYS_T(#Mobile.ParCal._TpPicke);
	                #Mobile.ParCal._Debut := #Mobile.ParCal._TpPicke;
	                #Mobile.ParCal.PreFois := TRUE;
	                // Initialisation du temps suivi
	                #Mobile.ParCal._TpsSuivi := t#0s;
	            END_IF;
	        END_REGION
	        REGION traitement cyclique
	            #Ret_RD_Sys_T := RD_SYS_T(#Mobile.ParCal._TpPicke);
	            #Mobile.ParCal._Temps := T_DIFF(IN1 := #Mobile.ParCal._TpPicke, IN2 := #Mobile.ParCal._Debut);
	            //test arrect calcul
	            IF #Mobile.ParCal._FgCalTps = FALSE THEN
	                #Mobile.ParCal._EtpT := #REPOS_Q;
	                RETURN;
	            END_IF;
	            //SORTIE Anticipee si arret transporteur
	            IF  NOT (#Mobile.Etat ="Pret")  AND NOT (#Mobile.Etat ="Vid")  THEN
	                #Mobile.ParCal._EtpT := #REPOS_Q;
	                RETURN;
	            END_IF;
	            //SORTIE Anticipee si pas de pm en calcul activité
	            IF #Mobile.Pass_Mat = FALSE  THEN
	                #Mobile.ParCal._EtpT := #REPOS_Q;
	                RETURN;
	            END_IF;
	            /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	            IF #Mobile.ParCal.PreFois THEN
	                // Si changement
	                //Memo du temps de transfert
	                #Mobile.ParCal._TpsSuivi := #Mobile.ParCal._TpsTran;
	                // RAZ temps de transfert
	                #Mobile.ParCal._TpsTran := t#0s;
	                // Si changement
	                #Mobile.ParCal.PreFois := FALSE;
	            END_IF;
	            #Mobile.ParCal._TpsTran := #Mobile.ParCal._TpsSuivi + #Mobile.ParCal._Temps;
	            RETURN;
	        END_REGION
	END_CASE;
END_FUNCTION

