FUNCTION "Controle_Cellule" : SInt
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : SAS
VERSION : 0.1
   VAR_INPUT 
      FgMaskNh : Bool;
      NvCellule : String;
      TypeCelDest : USInt;
      Cel : "S_MOD_CEL";
   END_VAR

   VAR_OUTPUT 
      NiveauHautDestNh : Bool;
   END_VAR

   VAR_TEMP 
      i : USInt;
      RET : SInt;
      Result_Cel : Word;
   END_VAR


BEGIN
	(* 
	FONCTION  QUI RETURN :
	-1 SI CELLULE N'EXISTE PAS DANS TAB CELLULE
	 1 si cellule existe mais elle est en nh
	 2 si cellule valide càd nh=0 et la cellule existe dans la tab cell
	 *)
	FOR #i := 0 TO "NB_CEL_MAX" DO
	    IF #i >= "NB_CEL_MAX" THEN
	        #Controle_Cellule := -1;// cellule n'existe pas dans la table cellule
	        RETURN;
	    END_IF;
	    // NvCellule = #Cel._TabCel[#i]._ELT._Cel
	    // IF #R.RecCommun.CommunGeneral._Dest[#Indice] = "Index_Mobile"(#Cel._TabCel[#i]._ELT._Cel)  THEN
	    IF #NvCellule = #Cel._TabCel[#i]._Cel THEN
	        // #Result_Cel := #Cel._TabCel[#i]._ELT._Type AND #R._TypeCelDest;
	       (* #Result_Cel := #Cel._TabCel[#i]._ELT._Type AND #TypeCelDest;
	        IF #Result_Cel < 1 THEN
	            EXIT;
	        END_IF; *)
	        //#R._NiveauHautDestNh := #Cel._TabCel[#i]._ELT._NivHaut;
	        #NiveauHautDestNh := #Cel._TabCel[#i]._NivHaut;
	        IF NOT #NiveauHautDestNh AND NOT #FgMaskNh THEN
	            #Controle_Cellule := 2; // cellule valide
	            RETURN;
	        ELSE
	            #Controle_Cellule := 1;// cellule invalide puisque NH=1
	            RETURN;
	        END_IF;
	    END_IF;
	END_FOR;
	#Controle_Cellule := -1;
	
	
	
	
	
	
	
	
END_FUNCTION

